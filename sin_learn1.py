# -*- coding: utf-8 -*-
"""sin_learn1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wrZ3xC6skWv-2OL3d_o5umtHTLllZ7oB

ライブラリのインポート
"""

import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

"""学習データの生成"""

N = 101 #刻み幅
P = 3 #学習周期
x = np.linspace(0, P* 2*np.pi, N)
y = np.sin(x)

"""正規化&正の整数値化"""

input_bit = 6 #6bitの整数値が最大値128
Max = pow(2, input_bit)

y = Max * y

base_data = y + 64
base_data = base_data.astype(np.int16)
print(base_data)

fig = plt.figure(figsize=(10,3), dpi=100, facecolor='w')
ax1 = fig.add_subplot(1,1,1)
plt.xlabel("time")
plt.ylabel("input")
ax1.plot(x, base_data)
plt.show()

"""入力と教師値に分割"""

input = base_data[:100]
target = base_data[1:]

"""ディレクトリをGoogleDriveに移動"""

from google.colab import drive
drive.mount('/content/gdrive')

import sys
sys.path.append('/content/gdrive/My Drive/SinPre')

"""データビット列化のためのモジュールインポート"""

import pulse_bitshift_sin as bit
import importlib
importlib.reload(bit)

"""ビット列化"""

input_bit = bit.rate_cut(len(input), 128, input)

number = 56
print('元のデータ{}\n 変換ビット{}\n 1の数{}'.format(base_data[number], input_bit[number], sum(input_bit[number])))

"""学習段階"""

import pulseNetClass3layer_re as pl
importlib.reload(pl)

"""インスタンスの作成"""

learning = pl.NNpulse(10, 128, 127)

"""インスタンスの初期化&入力値と教師値決定"""

learning.set_init(1,20,1)
learning.input_decision(0, 0, np.array(input_bit), np.array(target))

"""学習する"""

learning.DE_epoc(1, 1000)